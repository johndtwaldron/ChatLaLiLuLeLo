name: Lightning Network E2E Tests

on:
  push:
    branches: [main, develop, develop-v4]
    paths:
      - 'apps/mobile/src/components/ui/LightningQR.tsx'
      - 'apps/mobile/src/lib/lightning.ts'
      - 'apps/mobile/src/lib/bitcoin.ts'
      - 'apps/mobile/src/config/lightning.ts'
      - 'tests/e2e-web/lightning-*.spec.ts'
      - 'tests/e2e-web/lightning*.ts'
      - 'scripts/test-lightning-e2e.js'
      - '.github/workflows/lightning-e2e.yml'

  pull_request:
    branches: [main, develop, develop-v4]
    paths:
      - 'apps/mobile/src/components/ui/LightningQR.tsx'
      - 'apps/mobile/src/lib/lightning.ts'
      - 'apps/mobile/src/lib/bitcoin.ts'
      - 'apps/mobile/src/config/lightning.ts'
      - 'tests/e2e-web/lightning-*.spec.ts'
      - 'tests/e2e-web/lightning*.ts'
      - 'scripts/test-lightning-e2e.js'

  # Allow manual triggering
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit
      headed:
        description: 'Run tests in headed mode'
        required: false
        default: false
        type: boolean

env:
  CI: true
  NODE_ENV: test
  LIGHTNING_E2E_MODE: true

jobs:
  lightning-e2e:
    name: Lightning E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 📦 Install mobile app dependencies
        run: |
          cd apps/mobile
          npm ci

      - name: 📦 Install Edge API dependencies
        run: |
          cd apps/edge
          npm ci

      - name: 🎭 Install Playwright browsers
        run: |
          npx playwright install ${{ matrix.browser }} --with-deps
          npx playwright install-deps ${{ matrix.browser }}

      - name: 🔧 Validate Lightning configuration
        run: |
          echo "🔍 Validating Lightning Network configuration..."
          echo "Current directory: $(pwd)"
          echo "Checking required files..."
          
          # Check Lightning configuration files exist
          if [ -f "apps/mobile/src/config/lightning.ts" ]; then
            echo "✅ apps/mobile/src/config/lightning.ts found"
          else
            echo "❌ apps/mobile/src/config/lightning.ts missing"
            exit 1
          fi
          
          if [ -f "apps/mobile/src/lib/lightning.ts" ]; then
            echo "✅ apps/mobile/src/lib/lightning.ts found"
          else
            echo "❌ apps/mobile/src/lib/lightning.ts missing"
            exit 1
          fi
          
          if [ -f "apps/mobile/src/lib/bitcoin.ts" ]; then
            echo "✅ apps/mobile/src/lib/bitcoin.ts found"
          else
            echo "❌ apps/mobile/src/lib/bitcoin.ts missing"
            exit 1
          fi
          
          # Check for Lightning test utilities
          echo "\nChecking Lightning test utilities..."
          if [ -f "tests/utils/lightning-test-utils.js" ]; then
            echo "✅ tests/utils/lightning-test-utils.js found"
            
            # Test the utilities with comprehensive error handling
            cat > lightning-validation-test.js << 'LIGHTNING_TEST_EOF'
            try {
              console.log('Loading Lightning test utilities...');
              const { validateLightningAddress, generateQRData } = require('./tests/utils/lightning-test-utils');
              console.log('Lightning utilities loaded successfully');
              
              // Test address validation
              const validAddress = 'johndtwaldron@strike.me';
              console.log('Testing validation for:', validAddress);
              
              const validationResult = validateLightningAddress(validAddress);
              console.log('Validation result:', validationResult);
              
              if (!validationResult) {
                console.error('Lightning address validation failed for:', validAddress);
                process.exit(1);
              }
              
              // Test QR generation
              console.log('Testing QR generation for:', validAddress);
              const qrData = generateQRData(validAddress);
              console.log('Generated QR data:', qrData);
              
              if (!qrData || !qrData.includes(validAddress)) {
                console.error('QR data generation failed. Expected data containing:', validAddress, 'Got:', qrData);
                process.exit(1);
              }
              
              console.log('✅ Lightning configuration validation successful!');
              console.log('Address validation: PASS');
              console.log('QR generation: PASS');
              
            } catch (error) {
              console.error('Lightning validation error:', error.message);
              console.error('Stack trace:', error.stack);
              process.exit(1);
            }
            LIGHTNING_TEST_EOF
            
            node lightning-validation-test.js
            rm lightning-validation-test.js
            
          else
            echo "⚠️ tests/utils/lightning-test-utils.js not found"
            echo "Available files in tests/:"
            ls -la tests/ || echo "tests directory not found"
            echo "Available files in tests/utils/:"
            ls -la tests/utils/ || echo "tests/utils directory not found"
            exit 1
          fi

      - name: 🚀 Start development servers
        run: |
          # Start mobile app in background
          cd apps/mobile
          npm run start:web &
          MOBILE_PID=$!
          echo "MOBILE_PID=$MOBILE_PID" >> $GITHUB_ENV
          
          # Wait for servers to be ready
          timeout 120 bash -c 'until curl -f http://localhost:14085 >/dev/null 2>&1; do sleep 2; done'
          echo "✅ Development server ready"

      - name: 🧪 Run Lightning E2E tests
        run: |
          # Override browser selection if specified in workflow dispatch
          BROWSER="${{ github.event.inputs.browser || matrix.browser }}"
          HEADED_FLAG=""
          
          if [ "${{ github.event.inputs.headed }}" = "true" ]; then
            HEADED_FLAG="--headed"
          fi
          
          node scripts/test-lightning-e2e.js \
            --browser "$BROWSER" \
            --workers 1 \
            --retries 2 \
            --timeout 300000 \
            $HEADED_FLAG

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lightning-e2e-results-${{ matrix.browser }}
          path: |
            tests/e2e-web/reports/lightning/
            tests/e2e-web/test-results/lightning/
          retention-days: 7

      - name: 📄 Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lightning-playwright-report-${{ matrix.browser }}
          path: tests/e2e-web/reports/lightning/
          retention-days: 7

      - name: 🖼️ Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lightning-screenshots-${{ matrix.browser }}
          path: tests/e2e-web/test-results/lightning/
          retention-days: 3

      - name: 🎥 Upload videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lightning-videos-${{ matrix.browser }}
          path: tests/e2e-web/test-results/lightning/
          retention-days: 3

      - name: 📤 Save failure logs and diagnostics
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lightning-failure-logs-${{ matrix.browser }}
          path: |
            apps/mobile/npm-debug.log*
            apps/mobile/.npm/_logs/*.log
            tests/e2e-web/test-results/
            tests/e2e-web/reports/
            scripts/test-lightning-e2e.log
            /tmp/lightning-*.log
          retention-days: 14
          if-no-files-found: ignore
      
      - name: 📊 Generate debug report on failure
        if: failure()
        run: |
          echo "📊 Lightning E2E Debug Report" > lightning-debug-report.md
          echo "Browser: ${{ matrix.browser }}" >> lightning-debug-report.md
          echo "Timestamp: $(date -u)" >> lightning-debug-report.md
          echo "" >> lightning-debug-report.md
          
          echo "## Environment Info" >> lightning-debug-report.md
          echo "Node Version: $(node --version)" >> lightning-debug-report.md
          echo "NPM Version: $(npm --version)" >> lightning-debug-report.md
          echo "Playwright Version: $(npx playwright --version)" >> lightning-debug-report.md
          echo "" >> lightning-debug-report.md
          
          echo "## Process Status" >> lightning-debug-report.md
          echo "Running Node processes:" >> lightning-debug-report.md
          ps aux | grep node | head -10 >> lightning-debug-report.md
          echo "" >> lightning-debug-report.md
          
          echo "## Network Status" >> lightning-debug-report.md
          echo "Port 14085 status:" >> lightning-debug-report.md
          netstat -tulpn | grep 14085 || echo "Port 14085 not in use" >> lightning-debug-report.md
          echo "" >> lightning-debug-report.md
          
          echo "## Lightning Test Files" >> lightning-debug-report.md
          ls -la tests/utils/lightning-test-utils.js 2>/dev/null || echo "Lightning test utilities not found" >> lightning-debug-report.md
          ls -la tests/e2e-web/lightning*.spec.ts 2>/dev/null || echo "No Lightning E2E spec files found" >> lightning-debug-report.md
          
      - name: 📤 Upload debug report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lightning-debug-report-${{ matrix.browser }}
          path: lightning-debug-report.md
          retention-days: 14
          if-no-files-found: ignore

      - name: 🧹 Cleanup
        if: always()
        run: |
          # Kill development servers
          if [ -n "$MOBILE_PID" ]; then
            kill $MOBILE_PID || true
          fi
          
          # Kill any remaining Node processes
          pkill -f "expo start" || true
          pkill -f "webpack" || true

  # Aggregate results and create summary
  lightning-e2e-summary:
    name: Lightning E2E Summary
    runs-on: ubuntu-latest
    needs: [lightning-e2e]
    if: always()
    
    steps:
      - name: 📊 Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: lightning-e2e-results-*
          merge-multiple: true
          path: ./test-results

      - name: 📈 Generate test summary
        run: |
          echo "# Lightning Network E2E Test Results 🔸" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.lightning-e2e.result }}" = "success" ]; then
            echo "✅ **Status**: All Lightning E2E tests passed!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🎯 **Test Coverage**:" >> $GITHUB_STEP_SUMMARY
            echo "- Bitcoin mode switching ✅" >> $GITHUB_STEP_SUMMARY
            echo "- Lightning QR code rendering ✅" >> $GITHUB_STEP_SUMMARY
            echo "- Address copy functionality ✅" >> $GITHUB_STEP_SUMMARY
            echo "- Visual regression testing ✅" >> $GITHUB_STEP_SUMMARY
            echo "- Accessibility validation ✅" >> $GITHUB_STEP_SUMMARY
            echo "- Cross-browser compatibility ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status**: Some Lightning E2E tests failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🔍 Check the individual job logs and uploaded artifacts for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Test Matrix**: Chromium, Firefox, WebKit" >> $GITHUB_STEP_SUMMARY
          echo "⚡ **Lightning Address**: johndtwaldron@strike.me" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Test Environment**: Ubuntu Latest, Node.js 18" >> $GITHUB_STEP_SUMMARY

      - name: ⚡ Set status check
        if: always()
        run: |
          if [ "${{ needs.lightning-e2e.result }}" = "success" ]; then
            echo "Lightning E2E tests completed successfully! ✅"
            exit 0
          else
            echo "Lightning E2E tests encountered failures! ❌"
            exit 1
          fi
