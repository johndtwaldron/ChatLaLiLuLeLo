name: Deploy Web to GitHub Pages

on:
  push:
    branches: [develop-v4]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install mobile dependencies
        run: |
          cd apps/mobile
          npm ci

      - name: Run linting
        run: |
          cd apps/mobile
          npm run lint

      - name: Build web export for GitHub Pages
        run: |
          cd apps/mobile
          # Use the correct export command as defined in package.json
          npm run export:web
        env:
          EXPO_PUBLIC_API_URL: ${{ vars.DEMO_API_URL }}
          EXPO_PUBLIC_DEBUG_MODE: "0"

      - name: Fix asset paths for GitHub Pages
        run: |
          cd apps/mobile/dist
          
          # Fix absolute paths to relative paths in index.html
          if [ -f "index.html" ]; then
            # Replace /_expo/ with ./_expo/
            sed -i 's|src="/_expo/|src="./_expo/|g' index.html
            # Replace href="/_expo/ with href="./_expo/
            sed -i 's|href="/_expo/|href="./_expo/|g' index.html
            echo "Fixed asset paths in index.html"
            
            # Update page title
            sed -i 's|<title>ChatLaLiLuLeLo</title>|<title>140.85 â€” ChatLaLiLuLeLo</title>|g' index.html
            echo "Updated page title"
            
            # Show the patched result
            echo "Asset paths after fix:"
            grep -E '(src=|href=)' index.html | head -5
          else
            echo "Warning: index.html not found"
          fi

      - name: Create 404.html for SPA routing
        run: |
          cp apps/mobile/dist/index.html apps/mobile/dist/404.html
          echo "Created 404.html for SPA routing support"
          
      - name: Inject security headers into HTML
        run: |
          cd apps/mobile/dist
          
          # Create security headers meta tags
          SECURITY_HEADERS_META='<meta http-equiv="Content-Security-Policy" content="default-src '\''self'\'' https: data:; script-src '\''self'\'' '\''unsafe-inline'\'' '\''unsafe-eval'\'' https: data:; style-src '\''self'\'' '\''unsafe-inline'\'' https: data:; img-src '\''self'\'' https: data: blob:; font-src '\''self'\'' https: data:; connect-src '\''self'\'' https: wss: ws:; media-src '\''self'\'' https: data: blob:; object-src '\''none'\'' frame-src '\''none'\''">
          <meta http-equiv="X-Content-Type-Options" content="nosniff">
          <meta http-equiv="X-Frame-Options" content="DENY">
          <meta http-equiv="X-XSS-Protection" content="1; mode=block">
          <meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin">
          <meta http-equiv="Permissions-Policy" content="geolocation=(), camera=(), microphone=(), payment=(), usb=(), vr=(), accelerometer=(), gyroscope=(), magnetometer=(), fullscreen=(self)">'
          
          # Inject security headers after opening <head> tag in index.html
          if [ -f "index.html" ]; then
            # Add security headers after the opening head tag
            sed -i "s|<head>|<head>\n$SECURITY_HEADERS_META|" index.html
            echo "Injected security headers into index.html"
            
            # Verify injection worked
            echo "Security headers verification:"
            grep -o 'Content-Security-Policy\|X-Content-Type-Options\|X-Frame-Options' index.html | head -3
          else
            echo "Warning: index.html not found"
          fi
          
          # Also inject into 404.html
          if [ -f "404.html" ]; then
            sed -i "s|<head>|<head>\n$SECURITY_HEADERS_META|" 404.html
            echo "Injected security headers into 404.html"
          else
            echo "Warning: 404.html not found"
          fi

      - name: Inject runtime API URL
        run: |
          echo "window.__DEMO_API_URL='${{ vars.DEMO_API_URL }}'" > apps/mobile/dist/env.js
          echo "Injected API URL: ${{ vars.DEMO_API_URL }}"
          
          # Inject env.js script into index.html before other scripts
          if [ -f "apps/mobile/dist/index.html" ]; then
            # Add env.js script tag before the closing </head> tag
            sed -i 's|</head>|<script src="./env.js"></script></head>|' apps/mobile/dist/index.html
            echo "Patched index.html to load env.js"
          else
            echo "Warning: index.html not found at apps/mobile/dist/index.html"
            ls -la apps/mobile/dist/ || echo "dist directory not found"
          fi

      - name: Debug - List built files and fix asset accessibility
        run: |
          cd apps/mobile/dist
          echo "Files in dist directory:"
          find . -type f | head -20
          echo "\nAsset files:"
          find . -name "*.mp3" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | head -10
          echo "\nDirectory structure:"
          ls -la .
          
          # Check if assets are accessible via expected paths
          echo "\nChecking asset paths in JavaScript bundle:"
          if [ -f "_expo/static/js/web/index-"*.js ]; then
            echo "Found JavaScript bundle, checking for asset references:"
            grep -o '"[^"]*\.(mp3\|jpg\|jpeg\|png)' _expo/static/js/web/index-*.js | head -10 || echo "No asset references found"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/mobile/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
